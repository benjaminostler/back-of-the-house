# OG file-
# services:
#   fastapi:
#     environment:
#       CORS_HOST: http://localhost:3000
#     build:
#       context: api
#       dockerfile: Dockerfile.dev
#     ports:
#       - 8000:8000
#     volumes:
#       - ./api:/app

#   ghi:
#     image: node:lts-bullseye
#     command: /bin/bash run.sh
#     working_dir: /app
#     volumes:
#       - ./ghi:/app
#     ports:
#       - "3000:3000"
#     environment:
#       HOST_OS: ${OS}
#       NODE_ENV: development
#       HOST: "0.0.0.0"
#       PUBLIC_URL: http://localhost:3000
#       REACT_APP_API_HOST: ${REACT_APP_API_HOST}

# original dockerfile.dev
# volumes:
# services:
#   fastapi:
#     environment:
#       CORS_HOST: http://localhost:3000
#     build:
#       context: api
#       dockerfile: Dockerfile.dev
#     ports:
#       - 8000:8000
#     volumes:
#       - ./api:/app

volumes:
  gastroids:
    external: true
services:
  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      PUBLIC_URL: http://localhost:3000
      REACT_APP_API_HOST: ${REACT_APP_API_HOST}
  fastapi:
    build:
      context: fastapi
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./fastapi:/app
    environment:
      DATABASE_URL: postgresql://gastroids:gastroids@postgres/gastroids
      WAIT_HOSTS: postgres:5432
  postgres:
    build:
      context: data
      dockerfile: Dockerfile.dev
    volumes:
      - gastroids:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: gastroids
      POSTGRES_USER: gastroids
      POSTGRES_DB: gastroids
    ports:
      - "15432:5432"
